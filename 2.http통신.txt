Ajax 방식
	여러 라이브러리가 있겠으나, 
	주로 뷰리소스,  axios 를 사용한다

뷰리소스 라이브러리
	  <div id="app">
	    <button type="button" v-on:click="getData">뷰리소스(가져오기) 버튼</button>
	  </div>

	  <script src="https://cdn.jsdelivr.net/npm/vue@2.5.2/dist/vue.js"></script>
	  <!--  뷰리소드 로드-->
	  <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.3.4"></script>
	  <script>

	    new Vue({

	      el: '#app',
	      methods:{
		getData: function(){
		    var url = 'https://raw.githubusercontent.com/joshua1988/doit-vuejs/master/data/demo.json';
		    this.$http.get(url).then(function(response){

		      console.log(response);
		      /*yt {url: 'https://..', ok: true, status: 200, statusText: '', headers: mt,
		      data: "{\n\t\"fe1\": \"Angular\",\n\t\"fe2\": \"React\"..}}\n"
		      */

		      console.log(JSON.parse(response.data));
		      //{fe1: 'Angular', fe2: 'React', fe3: 'Vue.js', fe4: 'Backbone.js', be1: 'Spring', …}
		    });
		}
	      }
	    });

	  </script>

axios 라이브러리 방식

	  <div id="app">
	    <button type="button" v-on:click="getData">axios(가져오기) 버튼</button>
	  </div>

	  <script src="https://cdn.jsdelivr.net/npm/vue@2.5.2/dist/vue.js"></script>
	  <!--  axios 로드-->
	  <script src="https:/unpkg.com/axios/dist/axios.min.js"></script>
	  <script>

	    new Vue({

	      el: '#app',
	      methods:{
		getData: function(){
		  var url = 'https://raw.githubusercontent.com/joshua1988/doit-vuejs/master/data/demo.json';
		  axios.get(url).then(function(response){
		    console.log(response); //{data: {…}, status: 200, statusText: '', headers: {…}, config: {…}, …}
		    console.log(response.data);//{fe1: 'Angular', fe2: 'React', fe3: 'Vue.js',..}
		  });
		}
	      }
	    });

	  </script>